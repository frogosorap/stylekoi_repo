{"version":3,"sources":["components/LinkInClass.js","config/global_constants.js","components/Register.js","components/ResetDatabase.js","components/Login.js","components/Logout.js","components/AddCar.js","components/EditCar.js","components/DeleteCar.js","components/CarTableRow.js","components/CarTable.js","components/DisplayAllCars.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["LinkInClass","tabIndex","className","this","props","onClick","event","value","Component","ACCESS_LEVEL_NORMAL_USER","ACCESS_LEVEL_ADMIN","SERVER_HOST","Register","handleChange","e","setState","target","name","handleFileChange","selectedFile","files","handleSubmit","preventDefault","formData","FormData","state","append","axios","post","email","password","headers","then","res","data","errorMessage","console","log","localStorage","accessLevel","profilePhoto","token","isRegistered","confirmPassword","noValidate","id","to","type","placeholder","autoComplete","onChange","ref","input","inputToFocus","title","ResetDatabase","resetUsersModel","clear","isReset","Login","isLoggedIn","catch","err","response","Logout","AddCar","selectedFiles","model","colour","year","price","i","length","redirectToDisplayAllCars","focus","Group","controlId","Label","Control","multiple","EditCar","carObject","put","match","params","get","DeleteCar","delete","CarTableRow","car","photos","map","photo","filename","document","getElementById","_id","src","image","key","alt","CarTable","cars","DisplayAllCars","PrivateRoute","component","exact","path","rest","render","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8ac313d.chunk.js","sourcesContent":["//Author: Derek O Reilly\n//\n// Helper Component class that allows us to have a button that render the same way as a <Link> component\n// Use this class to link to functions within the same class\n// Use <Link> to link to Components that are in other routes\nimport React, {Component} from \"react\"\n\n\nexport default class LinkInClass extends Component\n{\n    render()\n    {\n        return (\n            <span tabIndex=\"0\" className={this.props.className} onClick={(event) => {this.props.onClick(event)}}>     \n                {this.props.value}\n            </span>\n        )\n    }\n}","// This file holds global constants that are visible on the Client-side\n\n\n// Access level\nexport const ACCESS_LEVEL_GUEST = 0\nexport const ACCESS_LEVEL_NORMAL_USER = 1\nexport const ACCESS_LEVEL_ADMIN = 2\n\n// Server\nexport const SERVER_HOST = `http://localhost:4000`","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\", \n            selectedFile:null,\n            isRegistered:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n\n    handleFileChange = (e) => \n    {\n        this.setState({selectedFile: e.target.files[0]})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        let formData = new FormData()  \n        if(this.state.selectedFile)\n        {\n            formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name)\n        }    \n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, {headers: {\"Content-type\": \"multipart/form-data\"}})\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully registered\n                { \n                    console.log(\"User registered and logged in\")\n                    \n                    localStorage.name = res.data.name\n                    localStorage.accessLevel = res.data.accessLevel\n                    localStorage.profilePhoto = res.data.profilePhoto                    \n                    localStorage.token = res.data.token\n                    \n                    this.setState({isRegistered:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Registration failed\")\n            }\n        })   \n    }\n\n\n    render() \n    {     \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n           \n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n            \n                <h2>New User Registration</h2>\n           \n                <input  \n                    name = \"name\"              \n                    type = \"text\"\n                    placeholder = \"Name\"\n                    autoComplete=\"name\"\n                    value = {this.state.name}\n                    onChange = {this.handleChange}\n                    ref = {(input) => { this.inputToFocus = input }} \n                /><br/>           \n\n\t        <input  \n                    name = \"email\"              \n                    type = \"email\"\n                    placeholder = \"Email\"\n                    autoComplete=\"email\"\n                    value = {this.state.email}\n                    onChange = {this.handleChange}\n                /><br/>              \n\n\t        <input  \n                    name = \"password\"           \n                    type = \"password\"\n                    placeholder = \"Password\"\n                    autoComplete=\"password\"\n                    title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                    value = {this.state.password}\n                    onChange = {this.handleChange}\n                /><br/>           \n\n                <input          \n                    name = \"confirmPassword\"    \n                    type = \"password\"\n                    placeholder = \"Confirm password\"\n                    autoComplete=\"confirmPassword\"\n                    value = {this.state.confirmPassword}\n                    onChange = {this.handleChange}\n                /><br/>\n                \n                <input          \n                    name = \"profilePhoto\"    \n                    type = \"file\"                    \n                    onChange = {this.handleFileChange}\n                /><br/><br/>\n                \n                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class ResetDatabase extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {   \n            isReset:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n\n    resetUsersModel = () =>\n    {\n        axios.post(`${SERVER_HOST}/users/reset_user_collection`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully reset the User collection\n                { \n                    console.log(\"User collection reset\")\n                    \n                    localStorage.clear()\n                }        \n            }\n            else\n            {\n                console.log(\"Failed to reset User collection\")\n            }\n            \n            this.setState({isReset:true})\n        })   \n    }\n\n\n\n    render() \n    { \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n\n               {this.state.isReset ? <Redirect to=\"/DisplayAllCars\"/> : null} \n\n                <p>\"Reset User Database\" is only for testing purposes.<br/>All code on the client-side and server-side relating to resetting the database should be removed from any development release</p>\n                <LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUsersModel}/> <br/><br/>\n                <p>Reset the database and set up an administrator with:<br/> * email <strong>admin@admin.com</strong><br/> * password <strong>123!\"£qweQWE</strong></p>        \n            \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            email:\"\",\n            password:\"\",\n            isLoggedIn:false\n        }\n    }\n        \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        axios.post(`${SERVER_HOST}/users/login/${this.state.email}/${this.state.password}`)\n        .then(res => \n        {     \n            localStorage.name = res.data.name\n            localStorage.accessLevel = res.data.accessLevel\n            localStorage.profilePhoto = res.data.profilePhoto                        \n            localStorage.token = res.data.token\n                    \n            this.setState({isLoggedIn:true})\n        }) \n        .catch(err =>\n        {\n            console.log(err.response.data)  \n        })\n    }\n\n\n    render()\n    {            \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\n                <h2>Login</h2>\n                \n                {this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                \n                <input \n                    type = \"email\" \n                    name = \"email\" \n                    placeholder = \"Email\"\n                    autoComplete=\"email\"\n                    value={this.state.email} \n                    onChange={this.handleChange}\n                /><br/>\n                    \n                <input \n                    type = \"password\" \n                    name = \"password\" \n                    placeholder = \"Password\"\n                    autoComplete=\"password\"\n                    value={this.state.password} \n                    onChange={this.handleChange}\n                /><br/><br/>\n                \n                <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/> \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>                                      \n            </form>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Logout extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            isLoggedIn:true\n        }\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n        \n        axios.post(`${SERVER_HOST}/users/logout`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    console.log(\"User logged out\")\n                    localStorage.clear() \n                    \n                    this.setState({isLoggedIn:false}) \n                }\n            }\n            else\n            {\n                console.log(\"Logout failed\")\n            }\n        }) \n    }\n\n\n    render()\n    {\n        return (\n            <div>   \n        \n                {!this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                  \n                <LinkInClass value=\"Log out\" className=\"red-button\" onClick={this.handleSubmit}/> \n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\"\n\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class AddCar extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            model:\"\",\n            colour:\"\",\n            year:\"\",\n            price:\"\",\n            selectedFiles:null,\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_ADMIN\n        }\n    }\n\n\n    componentDidMount() \n    {     \n        this.inputToFocus.focus()        \n    }\n \n \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFileChange = (e) => \n    {\n        this.setState({selectedFiles: e.target.files})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        let formData = new FormData()                  \n        formData.append(\"model\", this.state.model)\n        formData.append(\"colour\", this.state.colour)\n        formData.append(\"year\", this.state.year)\n        formData.append(\"price\", this.state.price)\n        \n        if(this.state.selectedFiles)\n        {\n            for(let i = 0; i < this.state.selectedFiles.length; i++)\n            {\n                formData.append(\"carPhotos\", this.state.selectedFiles[i])\n            }\n        }\n\n        axios.post(`${SERVER_HOST}/cars/add_car`, formData, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        .then(res => \n        {   \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {   \n                    console.log(\"Record added\")\n                    this.setState({redirectToDisplayAllCars:true})\n                } \n            }\n            else\n            {\n                console.log(\"Record not added\")\n            }\n        })\n    }\n\n\n    render()\n    {        \n        return (\n            <div className=\"form-container\"> \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}                                            \n                    \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n    \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group> \n                    \n                    <Form.Group controlId=\"photos\">\n                    <Form.Label>Photos</Form.Label>\n                    <Form.Control          \n                        type = \"file\" multiple onChange = {this.handleFileChange}\n                    /></Form.Group> <br/><br/>\n            \n                    <LinkInClass value=\"Add\" className=\"green-button\" onClick={this.handleSubmit}/>            \n            \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../config/global_constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            model: ``,\n            colour: ``,\n            year: ``,\n            price: ``,\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.get(`${SERVER_HOST}/cars/get_car/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    this.setState({\n                        model: res.data.model,\n                        colour: res.data.colour,\n                        year: res.data.year,\n                        price: res.data.price\n                    })\n                }\n            }\n            else\n            {\n                console.log(`Record not found`)\n            }\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const carObject = {\n            model: this.state.model,\n            colour: this.state.colour,\n            year: this.state.year,\n            price: this.state.price\n        }\n\n        axios.put(`${SERVER_HOST}/cars/update_car/${this.props.match.params.id}`, carObject, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {             \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {      \n                    console.log(`Record updated`)\n                    this.setState({redirectToDisplayAllCars:true})\n                }\n            }\n            else\n            {\n                console.log(`Record not updated`)\n            }\n        })\n    }\n\n\n    render() \n    {\n        return (\n            <div className=\"form-container\">\n    \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}  \n                        \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n        \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group>\n  \n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\n\r\nexport default class DeleteCar extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            redirectToDisplayAllCars:false\r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount() \r\n    {   \r\n        axios.delete(`${SERVER_HOST}/cars/delete_car/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\r\n        .then(res => \r\n        {\r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else // success\r\n                { \r\n                    console.log(\"Record deleted\")\r\n                }\r\n                this.setState({redirectToDisplayAllCars:true})\r\n            }\r\n            else \r\n            {\r\n                console.log(\"Record not deleted\")\r\n            }\r\n        })\r\n    }\r\n  \r\n  \r\n    render() \r\n    {\r\n        return (\r\n            <div>   \r\n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}                      \r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class CarTableRow extends Component \n{    \n    componentDidMount() \n    {\n        this.props.car.photos.map(photo => \n        {\n            return axios.get(`${SERVER_HOST}/cars/car_photo/${photo.filename}`)\n            .then(res => \n            {\n                if(res.data)\n                {            \n                    if (res.data.errorMessage)\n                    {\n                        console.log(res.data.errorMessage)    \n                    }\n                    else\n                    {           \n                        document.getElementById(photo._id).src = `data:;base64,${res.data.image}`                                                         \n                    }   \n                }\n                else\n                {\n                    console.log(\"Record not found\")\n                }\n            })\n        })\n    }\n    \n    \n    render() \n    {\n        return (\n            <tr>\n                <td>{this.props.car.model}</td>\n                <td>{this.props.car.colour}</td>\n                <td>{this.props.car.year}</td>\n                <td>{this.props.car.price}</td>\n                <td className=\"carPhotos\">\n                    {this.props.car.photos.map(photo => <img key={photo._id} id={photo._id} alt=\"\"/>)}\n                </td>           \n                <td>\n                    {localStorage.accessLevel > ACCESS_LEVEL_GUEST ? <Link className=\"green-button\" to={\"/EditCar/\" + this.props.car._id}>Edit</Link> : null}\n                    \n                    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? <Link className=\"red-button\" to={\"/DeleteCar/\" + this.props.car._id}>Delete</Link> : null}   \n                </td>  \n                \n            </tr>\n        )\n    }\n}","import React, {Component} from \"react\"\nimport CarTableRow from \"./CarTableRow\"\n\n\nexport default class CarTable extends Component \n{\n    render() \n    {\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Model</th>\n                        <th>Colour</th>\n                        <th>Year</th>\n                        <th>Price</th>\n                        <th>Photos</th>\n                        <th> </th>\n                    </tr>\n                </thead>\n                  \n                <tbody>\n                    {this.props.cars.map((car) => <CarTableRow key={car._id} car={car}/>)}\n                </tbody>\n            </table>      \n        )\n    }\n}","import React, {Component} from \"react\"\nimport {Link} from \"react-router-dom\"\n\nimport axios from \"axios\"\n\nimport CarTable from \"./CarTable\"\nimport Logout from \"./Logout\"\n\nimport {ACCESS_LEVEL_GUEST, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class DisplayAllCars extends Component \n{\n    constructor(props) \n    {\n        super(props)\n        \n        this.state = {\n            cars:[]\n        }\n    }\n    \n    \n    componentDidMount() \n    {\n        axios.get(`${SERVER_HOST}/cars/`)\n        .then(res => \n        {\n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {           \n                    console.log(\"Records read\")   \n                    this.setState({cars: res.data})                                         \n                }   \n            }\n            else\n            {\n                console.log(\"Record not found\")\n            }\n        })\n    }\n\n  \n    render() \n    {   \n        return (           \n            <div className=\"form-container\">\n                {\n                    localStorage.accessLevel > ACCESS_LEVEL_GUEST \n                    ? <div className=\"logout\">\n                        {\n                            localStorage.profilePhoto !== \"null\" \n                            ? <img id=\"profilePhoto\" src={`data:;base64,${localStorage.profilePhoto}`} alt=\"\"/>\n                            : null\n                        }                        \n                        <Logout/>\n                      </div>\n                    : <div>\n                        <Link className=\"green-button\" to={\"/Login\"}>Login</Link>\n                        <Link className=\"blue-button\" to={\"/Register\"}>Register</Link>  \n                        <Link className=\"red-button\" to={\"/ResetDatabase\"}>Reset Database</Link>  <br/><br/><br/></div>\n                }\n                \n                <div className=\"table-container\">\n                    <CarTable cars={this.state.cars} /> \n                        \n                    {\n                        localStorage.accessLevel >= ACCESS_LEVEL_ADMIN \n                        ? <div className=\"add-new-car\">\n                            <Link className=\"blue-button\" to={\"/AddCar\"}>Add New Car</Link>\n                          </div>\n                        : null\n                    }\n                </div>\n            </div> \n        )\n    }\n}","import React from 'react'\nimport {Route, Redirect } from \"react-router-dom\"\n\nimport {ACCESS_LEVEL_GUEST} from \"../config/global_constants\"\n\nconst PrivateRoute = ({ component: Component, exact, path, ...rest }) => \n(\n    <Route\n        exact = {exact}\n        path = {path}\n        render = {props => localStorage.accessLevel > ACCESS_LEVEL_GUEST ? <Component {...props} {...rest} /> : <Redirect to=\"/DisplayAllCars\"/> }\n    />\n)\n\nexport default PrivateRoute","import React, {Component} from \"react\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./css/App.css\"\n\nimport Register from \"./components/Register\"\nimport ResetDatabase from \"./components/ResetDatabase\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport AddCar from \"./components/AddCar\"\nimport EditCar from \"./components/EditCar\"\nimport DeleteCar from \"./components/DeleteCar\"\nimport DisplayAllCars from \"./components/DisplayAllCars\"\nimport PrivateRoute from \"./components/PrivateRoute\"\n\n\nimport {ACCESS_LEVEL_GUEST} from \"./config/global_constants\"\n\n\nif (typeof localStorage.accessLevel === \"undefined\")\n{\n    localStorage.name = \"GUEST\"\n    localStorage.accessLevel = ACCESS_LEVEL_GUEST\n    localStorage.token = null\n    localStorage.profilePhoto = null\n}\n\n    \nexport default class App extends Component \n{\n    render() \n    {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/Register\" component={Register} />\n                    <Route exact path=\"/ResetDatabase\" component={ResetDatabase} />                    \n                    <Route exact path=\"/\" component={DisplayAllCars} />\n                    <Route exact path=\"/Login\" component={Login} />\n                    <PrivateRoute exact path=\"/Logout\" component={Logout} />\n                    <PrivateRoute exact path=\"/AddCar\" component={AddCar} />\n                    <PrivateRoute exact path=\"/EditCar/:id\" component={EditCar} />\n                    <PrivateRoute exact path=\"/DeleteCar/:id\" component={DeleteCar} />\n                    <Route exact path=\"/DisplayAllCars\" component={DisplayAllCars}/> \n                    <Route path=\"*\" component={DisplayAllCars}/>                            \n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./css/index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n\n\nReactDOM.render(<App/>, document.getElementById(`root`))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}