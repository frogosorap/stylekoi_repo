{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault(); // Prevent default form submission behavior\n      // Check if all fields are filled out\n\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            address = _this$state.address;\n\n      if (name && email && address) {\n        this.setState({\n          formCompleted: true\n        });\n      } else {\n        // Handle incomplete form submission\n        alert(\"Please fill out all fields\");\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      formCompleted: false // Add formCompleted state\n\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          address = _this$state2.address,\n          formCompleted = _this$state2.formCompleted;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      value: name,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Email\",\n      value: email,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"address\",\n      placeholder: \"Your Address\",\n      value: address,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\Dashboard.js"],"names":["React","Component","axios","Dashboard","constructor","props","handleChange","e","setState","target","name","value","handleFormSubmit","preventDefault","state","email","address","formCompleted","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,YAVmB,GAUHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAZkB;;AAAA,SAcnBC,gBAdmB,GAcCL,CAAD,IAAO;AACxBA,MAAAA,CAAC,CAACM,cAAF,GADwB,CACJ;AACpB;;AAFwB,0BAGS,KAAKC,KAHd;AAAA,YAGhBJ,IAHgB,eAGhBA,IAHgB;AAAA,YAGVK,KAHU,eAGVA,KAHU;AAAA,YAGHC,OAHG,eAGHA,OAHG;;AAIxB,UAAIN,IAAI,IAAIK,KAAR,IAAiBC,OAArB,EAA8B;AAC5B,aAAKR,QAAL,CAAc;AAAES,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD,OAFD,MAEO;AACL;AACAC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KAxBkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,aAAa,EAAE,KAJJ,CAIW;;AAJX,KAAb;AAMD;;AAkBDE,EAAAA,MAAM,GAAG;AAAA,yBACyC,KAAKL,KAD9C;AAAA,UACCJ,IADD,gBACCA,IADD;AAAA,UACOK,KADP,gBACOA,KADP;AAAA,UACcC,OADd,gBACcA,OADd;AAAA,UACuBC,aADvB,gBACuBA,aADvB;AAGP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,KAAK,EAAEF,IAJT;AAKE,MAAA,QAAQ,EAAE,KAAKJ,YALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,YAHd;AAIE,MAAA,KAAK,EAAES,KAJT;AAKE,MAAA,QAAQ,EAAE,KAAKT,YALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,KAAK,EAAEU,OAHT;AAIE,MAAA,QAAQ,EAAE,KAAKV,YAJjB;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CADF;AA4BD;;AA1D+B;;AA6DlC,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      formCompleted: false, // Add formCompleted state\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    // Check if all fields are filled out\r\n    const { name, email, address } = this.state;\r\n    if (name && email && address) {\r\n      this.setState({ formCompleted: true });\r\n    } else {\r\n      // Handle incomplete form submission\r\n      alert(\"Please fill out all fields\");\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    const { name, email, address, formCompleted } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Your Name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Your Email\"\r\n          value={email}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"address\"\r\n          placeholder=\"Your Address\"\r\n          value={address}\r\n          onChange={this.handleChange}\r\n          required\r\n        ></textarea>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}