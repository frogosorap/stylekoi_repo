{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\BasketPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\n\nclass BasketPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      basketItems: JSON.parse(localStorage.getItem(\"basketItems\")) || [],\n      initialQuantities: {} // Store initial quantities of items\n\n    }; // Bind methods to the class instance\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleIncreaseQuantity = this.handleIncreaseQuantity.bind(this);\n    this.handleDecreaseQuantity = this.handleDecreaseQuantity.bind(this);\n  }\n\n  componentDidMount() {\n    // Initialize initialQuantities based on current basketItems\n    const initialQuantities = {};\n    this.state.basketItems.forEach(item => {\n      initialQuantities[item.id] = item.quantity;\n    });\n    this.setState({\n      initialQuantities\n    });\n  }\n\n  handleDelete(index) {\n    const basketItems = this.state.basketItems;\n    const itemId = basketItems[index].id;\n    const updatedBasketItems = basketItems.filter(item => item.id !== itemId);\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  handleIncreaseQuantity(id) {\n    const basketItems = this.state.basketItems;\n    const updatedBasketItems = basketItems.map(item => {\n      if (item.id === id) {\n        return _objectSpread({}, item, {\n          quantity: item.quantity + 1\n        });\n      }\n\n      return item;\n    });\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  handleDecreaseQuantity(id) {\n    const basketItems = this.state.basketItems;\n    const updatedBasketItems = basketItems.map(item => {\n      if (item.id === id && item.quantity > 0) {\n        return _objectSpread({}, item, {\n          quantity: item.quantity - 1\n        });\n      }\n\n      return item;\n    });\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          basketItems = _this$state.basketItems,\n          initialQuantities = _this$state.initialQuantities;\n    const groupedItems = {}; // Group items based on their IDs\n\n    basketItems.forEach(item => {\n      if (!groupedItems[item.id]) {\n        groupedItems[item.id] = _objectSpread({}, item, {\n          quantity: initialQuantities[item.id]\n        }); // Initialize quantity to initial quantity\n      } else {\n        groupedItems[item.id].quantity = initialQuantities[item.id];\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"basket-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Basket\"), Object.values(groupedItems).map((item, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"basket-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name: \", item.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Price: \\u20AC\", item.price), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Quantity: \", item.quantity), React.createElement(\"button\", {\n      onClick: this.handleDelete.bind(this, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: () => this.handleIncreaseQuantity(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: () => this.handleDecreaseQuantity(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"-\"))));\n  }\n\n}\n\nexport default BasketPage;","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\BasketPage.js"],"names":["React","Component","BasketPage","constructor","props","state","basketItems","JSON","parse","localStorage","getItem","initialQuantities","handleDelete","bind","handleIncreaseQuantity","handleDecreaseQuantity","componentDidMount","forEach","item","id","quantity","setState","index","itemId","updatedBasketItems","filter","setItem","stringify","map","render","groupedItems","Object","values","name","price"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EADrD;AAEXC,MAAAA,iBAAiB,EAAE,EAFR,CAEY;;AAFZ,KAAb,CAFiB,CAOjB;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BF,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAML,iBAAiB,GAAG,EAA1B;AACA,SAAKN,KAAL,CAAWC,WAAX,CAAuBW,OAAvB,CAA+BC,IAAI,IAAI;AACrCP,MAAAA,iBAAiB,CAACO,IAAI,CAACC,EAAN,CAAjB,GAA6BD,IAAI,CAACE,QAAlC;AACD,KAFD;AAGA,SAAKC,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACD;;AAEDC,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAAA,UACVhB,WADU,GACM,KAAKD,KADX,CACVC,WADU;AAElB,UAAMiB,MAAM,GAAGjB,WAAW,CAACgB,KAAD,CAAX,CAAmBH,EAAlC;AACA,UAAMK,kBAAkB,GAAGlB,WAAW,CAACmB,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,MAAvC,CAA3B;AAEAd,IAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCnB,IAAI,CAACoB,SAAL,CAAeH,kBAAf,CAApC;AACA,SAAKH,QAAL,CAAc;AAAEf,MAAAA,WAAW,EAAEkB;AAAf,KAAd;AACD;;AAEDV,EAAAA,sBAAsB,CAACK,EAAD,EAAK;AAAA,UACjBb,WADiB,GACD,KAAKD,KADJ,CACjBC,WADiB;AAEzB,UAAMkB,kBAAkB,GAAGlB,WAAW,CAACsB,GAAZ,CAAgBV,IAAI,IAAI;AACjD,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iCAAYD,IAAZ;AAAkBE,UAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAA5C;AACD;;AACD,aAAOF,IAAP;AACD,KAL0B,CAA3B;AAOAT,IAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCnB,IAAI,CAACoB,SAAL,CAAeH,kBAAf,CAApC;AACA,SAAKH,QAAL,CAAc;AAAEf,MAAAA,WAAW,EAAEkB;AAAf,KAAd;AACD;;AAEDT,EAAAA,sBAAsB,CAACI,EAAD,EAAK;AAAA,UACjBb,WADiB,GACD,KAAKD,KADJ,CACjBC,WADiB;AAEzB,UAAMkB,kBAAkB,GAAGlB,WAAW,CAACsB,GAAZ,CAAgBV,IAAI,IAAI;AACjD,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAZ,IAAkBD,IAAI,CAACE,QAAL,GAAgB,CAAtC,EAAyC;AACvC,iCAAYF,IAAZ;AAAkBE,UAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAA5C;AACD;;AACD,aAAOF,IAAP;AACD,KAL0B,CAA3B;AAOAT,IAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCnB,IAAI,CAACoB,SAAL,CAAeH,kBAAf,CAApC;AACA,SAAKH,QAAL,CAAc;AAAEf,MAAAA,WAAW,EAAEkB;AAAf,KAAd;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,wBACoC,KAAKxB,KADzC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcK,iBADd,eACcA,iBADd;AAEP,UAAMmB,YAAY,GAAG,EAArB,CAFO,CAIP;;AACAxB,IAAAA,WAAW,CAACW,OAAZ,CAAoBC,IAAI,IAAI;AAC1B,UAAI,CAACY,YAAY,CAACZ,IAAI,CAACC,EAAN,CAAjB,EAA4B;AAC1BW,QAAAA,YAAY,CAACZ,IAAI,CAACC,EAAN,CAAZ,qBAA6BD,IAA7B;AAAmCE,UAAAA,QAAQ,EAAET,iBAAiB,CAACO,IAAI,CAACC,EAAN;AAA9D,WAD0B,CACiD;AAC5E,OAFD,MAEO;AACLW,QAAAA,YAAY,CAACZ,IAAI,CAACC,EAAN,CAAZ,CAAsBC,QAAtB,GAAiCT,iBAAiB,CAACO,IAAI,CAACC,EAAN,CAAlD;AACD;AACF,KAND;AAQA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGY,MAAM,CAACC,MAAP,CAAcF,YAAd,EAA4BF,GAA5B,CAAgC,CAACV,IAAD,EAAOI,KAAP,KAC/B;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUJ,IAAI,CAACe,IAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAYf,IAAI,CAACgB,KAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAchB,IAAI,CAACE,QAAnB,CAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKR,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6BS,KAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKR,sBAAL,CAA4BI,IAAI,CAACC,EAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKJ,sBAAL,CAA4BG,IAAI,CAACC,EAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADD,CAFH,CADF;AAeD;;AAtFgC;;AAyFnC,eAAejB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass BasketPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      basketItems: JSON.parse(localStorage.getItem(\"basketItems\")) || [],\r\n      initialQuantities: {}, // Store initial quantities of items\r\n    };\r\n\r\n    // Bind methods to the class instance\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleIncreaseQuantity = this.handleIncreaseQuantity.bind(this);\r\n    this.handleDecreaseQuantity = this.handleDecreaseQuantity.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Initialize initialQuantities based on current basketItems\r\n    const initialQuantities = {};\r\n    this.state.basketItems.forEach(item => {\r\n      initialQuantities[item.id] = item.quantity;\r\n    });\r\n    this.setState({ initialQuantities });\r\n  }\r\n\r\n  handleDelete(index) {\r\n    const { basketItems } = this.state;\r\n    const itemId = basketItems[index].id;\r\n    const updatedBasketItems = basketItems.filter(item => item.id !== itemId);\r\n  \r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n\r\n  handleIncreaseQuantity(id) {\r\n    const { basketItems } = this.state;\r\n    const updatedBasketItems = basketItems.map(item => {\r\n      if (item.id === id) {\r\n        return { ...item, quantity: item.quantity + 1 };\r\n      }\r\n      return item;\r\n    });\r\n  \r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n  \r\n  handleDecreaseQuantity(id) {\r\n    const { basketItems } = this.state;\r\n    const updatedBasketItems = basketItems.map(item => {\r\n      if (item.id === id && item.quantity > 0) {\r\n        return { ...item, quantity: item.quantity - 1 };\r\n      }\r\n      return item;\r\n    });\r\n  \r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n\r\n  render() {\r\n    const { basketItems, initialQuantities } = this.state;\r\n    const groupedItems = {};\r\n\r\n    // Group items based on their IDs\r\n    basketItems.forEach(item => {\r\n      if (!groupedItems[item.id]) {\r\n        groupedItems[item.id] = { ...item, quantity: initialQuantities[item.id] }; // Initialize quantity to initial quantity\r\n      } else {\r\n        groupedItems[item.id].quantity = initialQuantities[item.id];\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"basket-page\">\r\n        <h1>Basket</h1>\r\n        {Object.values(groupedItems).map((item, index) => (\r\n          <div key={index} className=\"basket-item\">\r\n            <p>Name: {item.name}</p>\r\n            <p>Price: €{item.price}</p>\r\n            <p>Quantity: {item.quantity}</p>\r\n            <button onClick={this.handleDelete.bind(this, index)}>Delete</button>\r\n            <button onClick={() => this.handleIncreaseQuantity(item.id)}>+</button>\r\n            <button onClick={() => this.handleDecreaseQuantity(item.id)}>-</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasketPage;"]},"metadata":{},"sourceType":"module"}