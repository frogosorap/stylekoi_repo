{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milas\\\\OneDrive - Dundalk Institute of Technology\\\\Year 2\\\\Full Stack Development\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\PayPalMessage.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nexport default class PayPalMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToDisplayAllCars: false,\n      buttonColour: \"red-button\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS) {\n      this.setState({\n        heading: \"PayPal Transaction Confirmation\",\n        message: \"Your PayPal transaction was successful.\",\n        buttonColour: \"green-button\"\n      });\n    } else if (this.props.match.params.messageType === PayPalMessage.messageType.CANCEL) {\n      this.setState({\n        heading: \"PayPal Transaction Cancelled\",\n        message: \"You cancelled your PayPal transaction. Therefore, the transaction was not completed.\"\n      });\n    } else if (this.props.match.params.messageType === PayPalMessage.messageType.ERROR) {\n      this.setState({\n        heading: \"PayPal Transaction Error\",\n        message: \"An error occured when trying to perform your PayPal transaction. The transaction was not completed. Please try to perform your transaction again.\"\n      });\n    } else {\n      console.log(\"The 'messageType' prop that was passed into the PayPalMessage component is invalid. It must be one of the following: PayPalMessage.messageType.SUCCESS, PayPalMessage.messageType.CANCEL or PayPalMessage.messageType.ERROR\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"payPalMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllCars ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.heading), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.match.params.message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.message), this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Your PayPal payment confirmation is \", React.createElement(\"span\", {\n      id: \"payPalPaymentID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.match.params.payPalPaymentID)) : null, React.createElement(\"p\", {\n      id: \"payPalPaymentIDButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: this.state.buttonColour,\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Continue\")));\n  }\n\n}\nPayPalMessage.messageType = {\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n  CANCEL: \"cancel\"\n};","map":{"version":3,"sources":["C:\\Users\\milas\\OneDrive - Dundalk Institute of Technology\\Year 2\\Full Stack Development\\stylekoi_repo\\client\\src\\components\\PayPalMessage.js"],"names":["React","Component","Redirect","Link","PayPalMessage","constructor","props","state","redirectToDisplayAllCars","buttonColour","componentDidMount","match","params","messageType","SUCCESS","setState","heading","message","CANCEL","ERROR","console","log","render","payPalPaymentID"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AAEA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CACf;AAKII,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAACC,MAAAA,wBAAwB,EAAC,KAA1B;AACCC,MAAAA,YAAY,EAAC;AADd,KAAb;AAEH;;AAGDC,EAAAA,iBAAiB,GACjB;AACI,QAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,WAAxB,KAAwCT,aAAa,CAACS,WAAd,CAA0BC,OAArE,EACA;AACI,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC,iCAAT;AACCC,QAAAA,OAAO,EAAC,yCADT;AAECR,QAAAA,YAAY,EAAC;AAFd,OAAd;AAGH,KALD,MAMK,IAAG,KAAKH,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,WAAxB,KAAwCT,aAAa,CAACS,WAAd,CAA0BK,MAArE,EACL;AACI,WAAKH,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC,8BAAT;AACCC,QAAAA,OAAO,EAAC;AADT,OAAd;AAEH,KAJI,MAKA,IAAG,KAAKX,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,WAAxB,KAAwCT,aAAa,CAACS,WAAd,CAA0BM,KAArE,EACL;AACI,WAAKJ,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC,0BAAT;AACCC,QAAAA,OAAO,EAAC;AADT,OAAd;AAEH,KAJI,MAML;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,6NAAZ;AACH;AACJ;;AAGDC,EAAAA,MAAM,GACN;AACI,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKf,KAAL,CAAWC,wBAAX,GAAsC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,GAAyE,IAF9E,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWS,OAAhB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBK,OAA5B,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWU,OAAf,CANJ,EAQK,KAAKX,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,WAAxB,KAAwCT,aAAa,CAACS,WAAd,CAA0BC,OAAlE,GAA4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAuC;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKR,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBW,eAApD,CAAvC,CAA5E,GAAqM,IAR1M,EAUI;AAAG,MAAA,EAAE,EAAC,uBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWE,YAA5B;AAA0C,MAAA,EAAE,EAAE,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9B,CAVJ,CADJ;AAcH;;AAvDL;AADqBL,a,CAEVS,W,GAAc;AAACC,EAAAA,OAAO,EAAC,SAAT;AACCK,EAAAA,KAAK,EAAC,OADP;AAECD,EAAAA,MAAM,EAAC;AAFR,C","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\n\r\nexport default class PayPalMessage extends Component\r\n{      \r\n    static messageType = {SUCCESS:\"success\", \r\n                          ERROR:\"error\", \r\n                          CANCEL:\"cancel\"}\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        \r\n        this.state = {redirectToDisplayAllCars:false,\r\n                      buttonColour:\"red-button\"}\r\n    }          \r\n    \r\n    \r\n    componentDidMount() \r\n    {     \r\n        if(this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS)\r\n        {\r\n            this.setState({heading:\"PayPal Transaction Confirmation\",\r\n                           message:\"Your PayPal transaction was successful.\", \r\n                           buttonColour:\"green-button\"})\r\n        }\r\n        else if(this.props.match.params.messageType === PayPalMessage.messageType.CANCEL)\r\n        {\r\n            this.setState({heading:\"PayPal Transaction Cancelled\",\r\n                           message:\"You cancelled your PayPal transaction. Therefore, the transaction was not completed.\"})            \r\n        }\r\n        else if(this.props.match.params.messageType === PayPalMessage.messageType.ERROR)\r\n        {\r\n            this.setState({heading:\"PayPal Transaction Error\",\r\n                           message:\"An error occured when trying to perform your PayPal transaction. The transaction was not completed. Please try to perform your transaction again.\"})     \r\n        }\r\n        else\r\n        {\r\n            console.log(\"The 'messageType' prop that was passed into the PayPalMessage component is invalid. It must be one of the following: PayPalMessage.messageType.SUCCESS, PayPalMessage.messageType.CANCEL or PayPalMessage.messageType.ERROR\") \r\n        }\r\n    }\r\n    \r\n    \r\n    render()\r\n    {                 \r\n        return (\r\n            <div className=\"payPalMessage\">\r\n                \r\n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null} \r\n                \r\n                <h3>{this.state.heading}</h3>\r\n                <p>{this.props.match.params.message}</p>\r\n                <p>{this.state.message}</p>\r\n                \r\n                {this.props.match.params.messageType === PayPalMessage.messageType.SUCCESS ? <p>Your PayPal payment confirmation is <span id=\"payPalPaymentID\">{this.props.match.params.payPalPaymentID}</span></p> : null}\r\n                \r\n                <p id=\"payPalPaymentIDButton\"><Link className={this.state.buttonColour} to={\"/DisplayAllCars\"}>Continue</Link></p>                                     \r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}