{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            address = _this$state.address;\n\n      if (name && email && address) {\n        try {\n          const response = await axios.post(\"/api/form\", {\n            name,\n            email,\n            address\n          });\n          console.log(response.data); // Notify the parent component that the form is filled out\n\n          this.props.onFormSubmit(true);\n        } catch (error) {\n          console.error(\"Error submitting form:\", error);\n        }\n      } else {\n        // Form is not completely filled out\n        alert(\"Please fill out all fields\");\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"address\",\n      placeholder: \"Your Address\",\n      value: this.state.address,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\Dashboard.js"],"names":["React","Component","axios","Dashboard","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","state","email","address","response","post","console","log","data","onFormSubmit","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAXkB;;AAAA,SAanBC,YAbmB,GAaJ,MAAOL,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACM,cAAF;AAD0B,0BAEO,KAAKC,KAFZ;AAAA,YAElBJ,IAFkB,eAElBA,IAFkB;AAAA,YAEZK,KAFY,eAEZA,KAFY;AAAA,YAELC,OAFK,eAELA,OAFK;;AAG1B,UAAIN,IAAI,IAAIK,KAAR,IAAiBC,OAArB,EAA8B;AAC5B,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwB;AAAER,YAAAA,IAAF;AAAQK,YAAAA,KAAR;AAAeC,YAAAA;AAAf,WAAxB,CAAvB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EAFE,CAGF;;AACA,eAAKhB,KAAL,CAAWiB,YAAX,CAAwB,IAAxB;AACD,SALD,CAKE,OAAOC,KAAP,EAAc;AACdJ,UAAAA,OAAO,CAACI,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD;AACF,OATD,MASO;AACL;AACAC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KA7BkB;;AAEjB,SAAKV,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAwBDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWJ,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKJ,YALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,YAHd;AAIE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,KAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKT,YALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,OAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKV,YAJjB;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CAFF,CADF;AA+BD;;AAhE+B;;AAmElC,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, address } = this.state;\r\n    if (name && email && address) {\r\n      try {\r\n        const response = await axios.post(\"/api/form\", { name, email, address });\r\n        console.log(response.data);\r\n        // Notify the parent component that the form is filled out\r\n        this.props.onFormSubmit(true);\r\n      } catch (error) {\r\n        console.error(\"Error submitting form:\", error);\r\n      }\r\n    } else {\r\n      // Form is not completely filled out\r\n      alert(\"Please fill out all fields\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Dashboard</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your Name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <textarea\r\n            name=\"address\"\r\n            placeholder=\"Your Address\"\r\n            value={this.state.address}\r\n            onChange={this.handleChange}\r\n            required\r\n          ></textarea>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}