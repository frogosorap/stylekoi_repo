{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\BuyCar.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      const _this$state = this.state,\n            orderName = _this$state.orderName,\n            orderEmail = _this$state.orderEmail,\n            address = _this$state.address,\n            phone = _this$state.phone;\n      const imageUrl = this.props.imageUrl; // Pass imageUrl from props\n\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID, \"/\").concat(this.props.carID, \"/\").concat(this.props.price), {\n        orderName,\n        orderEmail,\n        address,\n        phone,\n        imageUrl // Include imageUrl in the request body\n\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null,\n      orderName: localStorage.getItem(\"orderName\") || \"\",\n      orderEmail: localStorage.getItem(\"orderEmail\") || \"\",\n      address: localStorage.getItem(\"address\") || \"\",\n      phone: localStorage.getItem(\"phone\") || \"\"\n    };\n  }\n\n  render() {\n    console.log(\"image\", this.props.imageUrl);\n    return React.createElement(\"div\", {\n      className: \"paypal-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\BuyCar.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyCar","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","state","orderName","orderEmail","address","phone","imageUrl","post","orderID","carID","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","localStorage","getItem","render","console","log","currency","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\r\nimport PayPalMessage from \"./PayPalMessage\";\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\n\r\nexport default class BuyCar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            redirectToPayPalMessage: false,\r\n            payPalMessageType: null,\r\n            payPalOrderID: null,\r\n            orderName: localStorage.getItem(\"orderName\") || \"\",\r\n            orderEmail: localStorage.getItem(\"orderEmail\") || \"\",\r\n            address: localStorage.getItem(\"address\") || \"\",\r\n            phone: localStorage.getItem(\"phone\") || \"\"\r\n        };\r\n    }\r\n\r\n    createOrder = (data, actions) => {\r\n        return actions.order.create({ purchase_units: [{ amount: { value: this.props.price } }] });\r\n    };\r\n\r\n    onApprove = (paymentData) => {\r\n        const { orderName, orderEmail, address, phone } = this.state;\r\n        const imageUrl = this.props.imageUrl; // Pass imageUrl from props\r\n    \r\n        axios\r\n            .post(`${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.carID}/${this.props.price}`, {\r\n                orderName,\r\n                orderEmail,\r\n                address,\r\n                phone,\r\n                imageUrl // Include imageUrl in the request body\r\n            })\r\n            .then((res) => {\r\n                this.setState({\r\n                    payPalMessageType: PayPalMessage.messageType.SUCCESS,\r\n                    payPalOrderID: paymentData.orderID,\r\n                    redirectToPayPalMessage: true\r\n                });\r\n            })\r\n            .catch((errorData) => {\r\n                this.setState({ payPalMessageType: PayPalMessage.messageType.ERROR, redirectToPayPalMessage: true });\r\n            });\r\n    };\r\n\r\n    onError = (errorData) => {\r\n        this.setState({ payPalMessageType: PayPalMessage.messageType.ERROR, redirectToPayPalMessage: true });\r\n    };\r\n\r\n    onCancel = (cancelData) => {\r\n        this.setState({ payPalMessageType: PayPalMessage.messageType.CANCEL, redirectToPayPalMessage: true });\r\n    };\r\n\r\n    render() {\r\n        console.log(\"image\",this.props.imageUrl);\r\n        return (\r\n            <div className=\"paypal-button\">\r\n                {this.state.redirectToPayPalMessage ? (\r\n                    <Redirect to={`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`} />\r\n                ) : null}\r\n\r\n                <PayPalScriptProvider options={{ currency: \"EUR\", \"client-id\": SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons\r\n                        style={{ layout: \"horizontal\" }}\r\n                        createOrder={this.createOrder}\r\n                        onApprove={this.onApprove}\r\n                        onError={this.onError}\r\n                        onCancel={this.onCancel}\r\n                    />\r\n                </PayPalScriptProvider>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}