{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\BuyBasket.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyBasket extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.totalPrice\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID), {\n        items: this.props.items,\n        totalPrice: this.props.totalPrice\n      }, {\n        headers: {\n          authorization: localStorage.token,\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        }); // Clear basket after successful purchase\n\n        localStorage.removeItem(\"basketItems\");\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"Error occurred during payment:\", errorData);\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\BuyBasket.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyBasket","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","totalPrice","onApprove","paymentData","post","orderID","items","headers","authorization","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","removeItem","catch","errorData","ERROR","onError","console","log","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\r\nimport PayPalMessage from \"./PayPalMessage\";\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\n\r\nexport default class BuyBasket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirectToPayPalMessage: false,\r\n      payPalMessageType: null,\r\n      payPalOrderID: null,\r\n    };\r\n  }\r\n\r\n  createOrder = (data, actions) => {\r\n    return actions.order.create({\r\n      purchase_units: [{ amount: { value: this.props.totalPrice } }],\r\n    });\r\n  };\r\n\r\n  onApprove = (paymentData) => {\r\n    axios\r\n      .post(\r\n        `${SERVER_HOST}/sales/${paymentData.orderID}`,\r\n        {\r\n          items: this.props.items,\r\n          totalPrice: this.props.totalPrice,\r\n        },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.token,\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\r\n          payPalOrderID: paymentData.orderID,\r\n          redirectToPayPalMessage: true,\r\n        });\r\n        // Clear basket after successful purchase\r\n        localStorage.removeItem(\"basketItems\");\r\n      })\r\n      .catch((errorData) => {\r\n        this.setState({\r\n          payPalMessageType: PayPalMessage.messageType.ERROR,\r\n          redirectToPayPalMessage: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  onError = (errorData) => {\r\n    console.log(\"Error occurred during payment:\", errorData);\r\n    this.setState({\r\n      payPalMessageType: PayPalMessage.messageType.ERROR,\r\n      redirectToPayPalMessage: true,\r\n    });\r\n  };\r\n\r\n  onCancel = (cancelData) => {\r\n    this.setState({\r\n      payPalMessageType: PayPalMessage.messageType.CANCEL,\r\n      redirectToPayPalMessage: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.redirectToPayPalMessage ? (\r\n          <Redirect\r\n            to={`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}\r\n          />\r\n        ) : null}\r\n\r\n        <PayPalScriptProvider\r\n          options={{ currency: \"EUR\", \"client-id\": SANDBOX_CLIENT_ID }}\r\n        >\r\n          <PayPalButtons\r\n            style={{ layout: \"horizontal\" }}\r\n            createOrder={this.createOrder}\r\n            onApprove={this.onApprove}\r\n            onError={this.onError}\r\n            onCancel={this.onCancel}\r\n          />\r\n        </PayPalScriptProvider>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}