{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\paypal\\\\client\\\\src\\\\components\\\\EditCar.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class EditCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const carObject = {\n        model: this.state.model,\n        colour: this.state.colour,\n        year: this.state.year,\n        price: this.state.price\n      };\n      axios.put(\"\".concat(SERVER_HOST, \"/cars/\").concat(this.props.match.params.id), carObject, {\n        headers: {\n          \"authorization\": localStorage.token\n        }\n      }).then(res => {\n        this.setState({\n          redirectToDisplayAllCars: true\n        });\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      });\n    };\n\n    this.state = {\n      model: \"\",\n      colour: \"\",\n      year: \"\",\n      price: \"\",\n      redirectToDisplayAllCars: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.get(\"\".concat(SERVER_HOST, \"/cars/\").concat(this.props.match.params.id), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      this.setState({\n        model: res.data.model,\n        colour: res.data.colour,\n        year: res.data.year,\n        price: res.data.price\n      });\n    }).catch(err => {// do nothing\n    });\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllCars ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Model\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"colour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"colour\",\n      value: this.state.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Year\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\paypal\\client\\src\\components\\EditCar.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","EditCar","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","carObject","model","state","colour","year","price","put","match","params","id","headers","localStorage","token","then","res","redirectToDisplayAllCars","catch","err","wasSubmittedAtLeastOnce","accessLevel","componentDidMount","inputToFocus","focus","get","data","render","errorMessage","input"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../config/global_constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            model: ``,\n            colour: ``,\n            year: ``,\n            price: ``,\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n            wasSubmittedAtLeastOnce:false\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.get(`${SERVER_HOST}/cars/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {     \n            this.setState({\n                model: res.data.model,\n                colour: res.data.colour,\n                year: res.data.year,\n                price: res.data.price\n            })            \n        })\n        .catch(err => \n        {\n            // do nothing\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const carObject = {\n            model: this.state.model,\n            colour: this.state.colour,\n            year: this.state.year,\n            price: this.state.price\n        }\n\n        axios.put(`${SERVER_HOST}/cars/${this.props.match.params.id}`, carObject, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {             \n            this.setState({redirectToDisplayAllCars:true})\n        })\n        .catch(err => \n        {\n            this.setState({wasSubmittedAtLeastOnce: true})\n        })\n    }\n\n\n    render() \n    {\n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\n        } \n        \n        return (\n            <div className=\"form-container\">\n    \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}  \n                    \n                {errorMessage}\n                \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n        \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group>\n  \n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}