{"ast":null,"code":"import _slicedToArray from \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\UserTable.js\";\nimport React, { Component } from \"react\";\nimport UserTableRow from \"./UserTableRow\";\nexport default class UserTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBy: null,\n      sortOrder: \"asc\",\n      // Default sorting order is ascending\n      filterAccessLevel: \"\",\n      // Default filter is empty\n      searchQuery: \"\" // Default search query is empty\n\n    };\n    this.handleSort = this.handleSort.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSort(event) {\n    const selectedOption = event.target.value;\n\n    const _selectedOption$split = selectedOption.split(\"_\"),\n          _selectedOption$split2 = _slicedToArray(_selectedOption$split, 2),\n          sortBy = _selectedOption$split2[0],\n          sortOrder = _selectedOption$split2[1];\n\n    this.setState({\n      sortBy,\n      sortOrder\n    });\n  }\n\n  handleFilter(event) {\n    const filterAccessLevel = event.target.value;\n    this.setState({\n      filterAccessLevel\n    });\n  }\n\n  handleSearch(event) {\n    const searchQuery = event.target.value;\n    this.setState({\n      searchQuery\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          sortBy = _this$state.sortBy,\n          sortOrder = _this$state.sortOrder,\n          filterAccessLevel = _this$state.filterAccessLevel,\n          searchQuery = _this$state.searchQuery;\n    let users = this.props.users; // Sorting users based on the selected sorting order and criteria\n\n    if (sortBy) {\n      users.sort((a, b) => {\n        let comparison = 0;\n\n        if (a[sortBy] > b[sortBy]) {\n          comparison = 1;\n        } else if (a[sortBy] < b[sortBy]) {\n          comparison = -1;\n        }\n\n        return sortOrder === \"asc\" ? comparison : comparison * -1;\n      });\n    } // Filtering users based on access level\n\n\n    if (filterAccessLevel) {\n      users = users.filter(user => user.accessLevel === parseInt(filterAccessLevel));\n    } // Filtering users based on search query\n\n\n    if (searchQuery) {\n      users = users.filter(user => user.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"user-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Admin Dashboard\"), React.createElement(\"div\", {\n      className: \"sort-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"sort\",\n      onChange: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sort By\"), React.createElement(\"option\", {\n      value: \"name_asc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Name A-Z\"), React.createElement(\"option\", {\n      value: \"name_desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Name Z-A\"))), React.createElement(\"div\", {\n      className: \"filter-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"filter\",\n      onChange: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Guest\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Admin\"))), React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name...\",\n      onChange: this.handleSearch,\n      value: searchQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"user-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Icon\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Access Level\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserTableRow, {\n      key: user._id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\UserTable.js"],"names":["React","Component","UserTableRow","UserTable","constructor","props","state","sortBy","sortOrder","filterAccessLevel","searchQuery","handleSort","bind","handleFilter","handleSearch","event","selectedOption","target","value","split","setState","render","users","sort","a","b","comparison","filter","user","accessLevel","parseInt","name","toLowerCase","includes","map","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UserTableRow from \"./UserTableRow\";\r\n\r\nexport default class UserTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sortBy: null,\r\n      sortOrder: \"asc\", // Default sorting order is ascending\r\n      filterAccessLevel: \"\", // Default filter is empty\r\n      searchQuery: \"\", // Default search query is empty\r\n    };\r\n\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  handleSort(event) {\r\n    const selectedOption = event.target.value;\r\n    const [sortBy, sortOrder] = selectedOption.split(\"_\");\r\n    this.setState({ sortBy, sortOrder });\r\n  }\r\n\r\n  handleFilter(event) {\r\n    const filterAccessLevel = event.target.value;\r\n    this.setState({ filterAccessLevel });\r\n  }\r\n\r\n  handleSearch(event) {\r\n    const searchQuery = event.target.value;\r\n    this.setState({ searchQuery });\r\n  }\r\n\r\n  render() {\r\n    const { sortBy, sortOrder, filterAccessLevel, searchQuery } = this.state;\r\n    let { users } = this.props;\r\n\r\n    // Sorting users based on the selected sorting order and criteria\r\n    if (sortBy) {\r\n      users.sort((a, b) => {\r\n        let comparison = 0;\r\n        if (a[sortBy] > b[sortBy]) {\r\n          comparison = 1;\r\n        } else if (a[sortBy] < b[sortBy]) {\r\n          comparison = -1;\r\n        }\r\n        return sortOrder === \"asc\" ? comparison : comparison * -1;\r\n      });\r\n    }\r\n\r\n    // Filtering users based on access level\r\n    if (filterAccessLevel) {\r\n      users = users.filter(user => user.accessLevel === parseInt(filterAccessLevel));\r\n    }\r\n\r\n    // Filtering users based on search query\r\n    if (searchQuery) {\r\n      users = users.filter(user => user.name.toLowerCase().includes(searchQuery.toLowerCase()));\r\n    }\r\n\r\n    return (\r\n      <div className=\"user-page\">\r\n        <h1>Admin Dashboard</h1>\r\n        <div className=\"sort-options\">\r\n          <select id=\"sort\" onChange={this.handleSort}>\r\n            <option value=\"\">Sort By</option>\r\n            <option value=\"name_asc\">Name A-Z</option>\r\n            <option value=\"name_desc\">Name Z-A</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-options\">\r\n          <select id=\"filter\" onChange={this.handleFilter}>\r\n            <option value=\"\">All</option>\r\n            <option value=\"1\">Guest</option>\r\n            <option value=\"2\">User</option>\r\n            <option value=\"3\">Admin</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by name...\"\r\n            onChange={this.handleSearch}\r\n            value={searchQuery}\r\n          />\r\n        </div>\r\n        <table className=\"user-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Icon</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Access Level</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <UserTableRow key={user._id} user={user} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}