{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milas\\\\OneDrive - Dundalk Institute of Technology\\\\Year 2\\\\Full Stack Development\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\BuyCar.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class BuyCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      // Include form data along with order data\n      const orderData = {\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          },\n          custom_id: this.props.carID,\n          // Custom ID for the car\n          description: \"Car Purchase\",\n          // Description of the purchase\n          shipping: {\n            // Include shipping details\n            name: this.state.name,\n            address: {\n              address_line_1: this.state.address,\n              admin_area_2: \"\",\n              // City\n              admin_area_1: \"\",\n              // State\n              postal_code: \"\",\n              // Postal Code\n              country_code: \"\" // Country Code\n\n            }\n          }\n        }]\n      };\n      return actions.order.create(orderData);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onApprove = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.orderID, \"/\").concat(this.props.carID, \"/\").concat(this.props.price), {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"paypal-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\milas\\OneDrive - Dundalk Institute of Technology\\Year 2\\Full Stack Development\\stylekoi_repo\\client\\src\\components\\BuyCar.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","BuyCar","constructor","props","createOrder","data","actions","orderData","purchase_units","amount","value","price","custom_id","carID","description","shipping","name","state","address","address_line_1","admin_area_2","admin_area_1","postal_code","country_code","order","create","handleChange","e","setState","target","onApprove","paymentData","post","orderID","headers","localStorage","token","then","res","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","render","currency","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\"\r\nimport PayPalMessage from \"./PayPalMessage\"\r\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\"\r\n\r\nexport default class BuyCar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            redirectToPayPalMessage: false,\r\n            payPalMessageType: null,\r\n            payPalOrderID: null\r\n        }\r\n    }\r\n\r\n    createOrder = (data, actions) => {\r\n        // Include form data along with order data\r\n        const orderData = {\r\n            purchase_units: [{ \r\n                amount: { value: this.props.price },\r\n                custom_id: this.props.carID, // Custom ID for the car\r\n                description: \"Car Purchase\", // Description of the purchase\r\n                shipping: { // Include shipping details\r\n                    name: this.state.name,\r\n                    address: {\r\n                        address_line_1: this.state.address,\r\n                        admin_area_2: \"\", // City\r\n                        admin_area_1: \"\", // State\r\n                        postal_code: \"\", // Postal Code\r\n                        country_code: \"\" // Country Code\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n\r\n        return actions.order.create(orderData);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n\r\n    onApprove = paymentData => {\r\n        axios.post(\r\n            `${SERVER_HOST}/sales/${paymentData.orderID}/${this.props.carID}/${this.props.price}`, { headers: { \"authorization\": localStorage.token, \"Content-type\": \"multipart/form-data\" } })\r\n            .then(res => {\r\n                this.setState({\r\n                    payPalMessageType: PayPalMessage.messageType.SUCCESS,\r\n                    payPalOrderID: paymentData.orderID,\r\n                    redirectToPayPalMessage: true\r\n                })\r\n            })\r\n            .catch(errorData => {\r\n                this.setState({\r\n                    payPalMessageType: PayPalMessage.messageType.ERROR,\r\n                    redirectToPayPalMessage: true\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    onError = errorData => {\r\n        this.setState({\r\n            payPalMessageType: PayPalMessage.messageType.ERROR,\r\n            redirectToPayPalMessage: true\r\n        })\r\n    }\r\n\r\n\r\n    onCancel = cancelData => {\r\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n        this.setState({\r\n            payPalMessageType: PayPalMessage.messageType.CANCEL,\r\n            redirectToPayPalMessage: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"paypal-button\">\r\n                {this.state.redirectToPayPalMessage ? <Redirect to={`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`} /> : null}\r\n\r\n                <PayPalScriptProvider options={{ currency: \"EUR\", \"client-id\": SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons style={{ layout: \"horizontal\" }} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel} />\r\n                </PayPalScriptProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}