{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // Perform validation\n\n      const errors = this.validateForm();\n\n      if (Object.keys(errors).some(key => errors[key])) {\n        this.setState({\n          errors\n        });\n        return;\n      }\n\n      let formData = new FormData();\n\n      if (this.state.selectedFile) {\n        formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name);\n      }\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password), formData, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        localStorage.setItem(\"name\", res.data.name);\n        localStorage.setItem(\"accessLevel\", res.data.accessLevel);\n        localStorage.setItem(\"profilePhoto\", res.data.profilePhoto);\n        localStorage.setItem(\"token\", res.data.token);\n        this.setState({\n          isRegistered: true\n        });\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      });\n    };\n\n    this.validateForm = () => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const errors = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }; // Name validation\n\n      if (name.length <= 1) {\n        errors.name = \"Name must be longer than 1 character\";\n      } // Email validation\n\n\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n      if (!emailRegex.test(email)) {\n        errors.email = \"Email must follow the email format\";\n      } // Password validation\n\n\n      if (password.length <= 5) {\n        errors.password = \"Password must be longer than 5 characters\";\n      } // Confirm Password validation\n\n\n      if (password !== confirmPassword) {\n        errors.confirmPassword = \"Confirm Password must match Password\";\n      }\n\n      return errors;\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      selectedFile: null,\n      isRegistered: false,\n      wasSubmittedAtLeastOnce: false,\n      errors: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n\n    const errors = this.state.errors;\n    return React.createElement(\"form\", {\n      className: \"forms\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"New User Registration\"), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), errors.name && React.createElement(\"div\", {\n      className: \"error red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, errors.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), errors.email && React.createElement(\"div\", {\n      className: \"error red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, errors.email), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"new-password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"error red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, errors.password), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      autoComplete: \"new-password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), errors.confirmPassword && React.createElement(\"div\", {\n      className: \"error red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, errors.confirmPassword), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"profilePhoto\",\n      type: \"file\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Register New User\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\Register.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleFileChange","selectedFile","files","handleSubmit","preventDefault","errors","validateForm","Object","keys","some","key","formData","FormData","state","append","post","email","password","headers","then","res","localStorage","setItem","data","accessLevel","profilePhoto","token","isRegistered","catch","err","wasSubmittedAtLeastOnce","confirmPassword","length","emailRegex","test","render","errorMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Redirect, Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\nimport { SERVER_HOST } from \"../config/global_constants\"\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            selectedFile: null,\r\n            isRegistered: false,\r\n            wasSubmittedAtLeastOnce: false,\r\n            errors: {\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({ selectedFile: e.target.files[0] })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Perform validation\r\n        const errors = this.validateForm();\r\n        if (Object.keys(errors).some((key) => errors[key])) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData()\r\n        if (this.state.selectedFile) {\r\n            formData.append(\"profilePhoto\", this.state.selectedFile, this.state.selectedFile.name)\r\n        }\r\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`, formData, { headers: { \"Content-type\": \"multipart/form-data\" } })\r\n            .then(res => {\r\n                localStorage.setItem(\"name\", res.data.name);\r\n                localStorage.setItem(\"accessLevel\", res.data.accessLevel);\r\n                localStorage.setItem(\"profilePhoto\", res.data.profilePhoto);\r\n                localStorage.setItem(\"token\", res.data.token);\r\n\r\n                this.setState({ isRegistered: true })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ wasSubmittedAtLeastOnce: true })\r\n            })\r\n    }\r\n\r\n    validateForm = () => {\r\n        const { name, email, password, confirmPassword } = this.state;\r\n        const errors = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        };\r\n\r\n        // Name validation\r\n        if (name.length <= 1) {\r\n            errors.name = \"Name must be longer than 1 character\";\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(email)) {\r\n            errors.email = \"Email must follow the email format\";\r\n        }\r\n\r\n        // Password validation\r\n        if (password.length <= 5) {\r\n            errors.password = \"Password must be longer than 5 characters\";\r\n        }\r\n\r\n        // Confirm Password validation\r\n        if (password !== confirmPassword) {\r\n            errors.confirmPassword = \"Confirm Password must match Password\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    render() {\r\n        let errorMessage = \"\";\r\n        if (this.state.wasSubmittedAtLeastOnce) {\r\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br /></div>;\r\n        }\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <form className=\"forms\" noValidate={true} id=\"loginOrRegistrationForm\">\r\n\r\n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\" /> : null}\r\n\r\n                {errorMessage}\r\n\r\n                <h2>New User Registration</h2>\r\n\r\n                <input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                />\r\n                {errors.name && <div className=\"error red\">{errors.name}</div>}\r\n                <br />\r\n\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                />\r\n                {errors.email && <div className=\"error red\">{errors.email}</div>}\r\n                <br />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"new-password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                />\r\n                {errors.password && <div className=\"error red\">{errors.password}</div>}\r\n                <br />\r\n\r\n                <input\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    autoComplete=\"new-password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.handleChange}\r\n                />\r\n                {errors.confirmPassword && <div className=\"error red\">{errors.confirmPassword}</div>}\r\n                <br />\r\n\r\n                <input\r\n                    name=\"profilePhoto\"\r\n                    type=\"file\"\r\n                    onChange={this.handleFileChange}\r\n                />\r\n                <br /><br />\r\n\r\n                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\r\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}