{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\stylekoi_repo\\\\client\\\\src\\\\components\\\\BasketPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass BasketPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      basketItems: JSON.parse(localStorage.getItem(\"basketItems\")) || [],\n      isPaymentSuccessful: false\n    }; // Bind methods to the class instance\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleIncreaseQuantity = this.handleIncreaseQuantity.bind(this);\n    this.handleDecreaseQuantity = this.handleDecreaseQuantity.bind(this);\n    this.handlePayWithPayPal = this.handlePayWithPayPal.bind(this);\n  }\n\n  handleDelete(index) {\n    const basketItems = this.state.basketItems;\n    const itemId = basketItems[index].id;\n    const updatedBasketItems = basketItems.filter(item => item.id !== itemId);\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  handleIncreaseQuantity(id) {\n    const basketItems = this.state.basketItems;\n    const updatedBasketItems = basketItems.map(item => {\n      if (item.id === id) {\n        return _objectSpread({}, item, {\n          quantity: (item.quantity || 0) + 1\n        }); // Increment quantity\n      }\n\n      return item;\n    });\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  handleDecreaseQuantity(id) {\n    const basketItems = this.state.basketItems;\n    const updatedBasketItems = basketItems.map(item => {\n      if (item.id === id) {\n        const newQuantity = (item.quantity || 0) - 1;\n        const quantity = newQuantity >= 0 ? newQuantity : 0;\n        return _objectSpread({}, item, {\n          quantity\n        });\n      }\n\n      return item;\n    });\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\n    this.setState({\n      basketItems: updatedBasketItems\n    });\n  }\n\n  handlePayWithPayPal() {\n    const basketItems = this.state.basketItems;\n    const totalPrice = basketItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0); // Call your backend to create a PayPal payment\n\n    axios.post(\"/api/paypal/payment/create\", {\n      totalPrice\n    }).then(response => {\n      // Redirect user to PayPal for payment\n      window.location.href = response.data.approvalUrl;\n    }).catch(error => {\n      console.error(\"Error creating PayPal payment:\", error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          basketItems = _this$state.basketItems,\n          isPaymentSuccessful = _this$state.isPaymentSuccessful;\n\n    if (isPaymentSuccessful) {\n      return React.createElement(\"div\", {\n        className: \"payment-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Payment Successful!\"));\n    } // Calculate total price of all items\n\n\n    const totalPrice = basketItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n    return React.createElement(\"div\", {\n      className: \"basket-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Basket\"), basketItems.length === 0 ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"There are currently no items in your basket.\") : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"basket-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, basketItems.map((item, index) => React.createElement(\"tr\", {\n      key: index,\n      className: \"basket-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.imageUrl,\n      alt: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u20AC\", item.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\u20AC\", (item.price * item.quantity).toFixed(2)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDecreaseQuantity(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"-\"), item.quantity, React.createElement(\"button\", {\n      onClick: () => this.handleIncreaseQuantity(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleDelete(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"X\")))))), React.createElement(\"div\", {\n      className: \"total-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Total Price: \\u20AC\", totalPrice.toFixed(2)), React.createElement(\"button\", {\n      onClick: this.handlePayWithPayPal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Pay with PayPal\")));\n  }\n\n}\n\nexport default BasketPage;","map":{"version":3,"sources":["C:\\nodejs_projects\\stylekoi_repo\\client\\src\\components\\BasketPage.js"],"names":["React","Component","axios","BasketPage","constructor","props","state","basketItems","JSON","parse","localStorage","getItem","isPaymentSuccessful","handleDelete","bind","handleIncreaseQuantity","handleDecreaseQuantity","handlePayWithPayPal","index","itemId","id","updatedBasketItems","filter","item","setItem","stringify","setState","map","quantity","newQuantity","totalPrice","reduce","total","price","post","then","response","window","location","href","data","approvalUrl","catch","error","console","render","length","imageUrl","name","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass BasketPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      basketItems: JSON.parse(localStorage.getItem(\"basketItems\")) || [],\r\n      isPaymentSuccessful: false,\r\n    };\r\n\r\n    // Bind methods to the class instance\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleIncreaseQuantity = this.handleIncreaseQuantity.bind(this);\r\n    this.handleDecreaseQuantity = this.handleDecreaseQuantity.bind(this);\r\n    this.handlePayWithPayPal = this.handlePayWithPayPal.bind(this);\r\n  }\r\n\r\n  handleDelete(index) {\r\n    const { basketItems } = this.state;\r\n    const itemId = basketItems[index].id;\r\n    const updatedBasketItems = basketItems.filter(item => item.id !== itemId);\r\n\r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n\r\n  handleIncreaseQuantity(id) {\r\n    const { basketItems } = this.state;\r\n  \r\n    const updatedBasketItems = basketItems.map(item => {\r\n      if (item.id === id) {\r\n        return { ...item, quantity: (item.quantity || 0) + 1 }; // Increment quantity\r\n      }\r\n      return item;\r\n    });\r\n\r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n  \r\n  handleDecreaseQuantity(id) {\r\n    const { basketItems } = this.state;\r\n  \r\n    const updatedBasketItems = basketItems.map(item => {\r\n      if (item.id === id) {\r\n        const newQuantity = (item.quantity || 0) - 1;\r\n        const quantity = newQuantity >= 0 ? newQuantity : 0;\r\n        return { ...item, quantity };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    localStorage.setItem(\"basketItems\", JSON.stringify(updatedBasketItems));\r\n    this.setState({ basketItems: updatedBasketItems });\r\n  }\r\n\r\n  handlePayWithPayPal() {\r\n    const { basketItems } = this.state;\r\n    const totalPrice = basketItems.reduce((total, item) => {\r\n      return total + item.price * item.quantity;\r\n    }, 0);\r\n\r\n    // Call your backend to create a PayPal payment\r\n    axios\r\n      .post(\"/api/paypal/payment/create\", { totalPrice })\r\n      .then((response) => {\r\n        // Redirect user to PayPal for payment\r\n        window.location.href = response.data.approvalUrl;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error creating PayPal payment:\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { basketItems, isPaymentSuccessful } = this.state;\r\n\r\n    if (isPaymentSuccessful) {\r\n      return (\r\n        <div className=\"payment-success\">\r\n          <h2>Payment Successful!</h2>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Calculate total price of all items\r\n    const totalPrice = basketItems.reduce((total, item) => {\r\n      return total + (item.price * item.quantity);\r\n    }, 0);\r\n    \r\n    return (\r\n      <div className=\"basket-page\">\r\n        <h1>Basket</h1>\r\n        {basketItems.length === 0 ? (\r\n          <h4>There are currently no items in your basket.</h4>\r\n        ) : (\r\n          <React.Fragment>\r\n            <table className=\"basket-table\">\r\n              <tbody>\r\n                {basketItems.map((item, index) => (\r\n                  <tr key={index} className=\"basket-item\">\r\n                    <td>\r\n                      <img src={item.imageUrl} alt={item.name} />\r\n                    </td>\r\n                    <td>€{item.price}</td>\r\n                    <td>€{(item.price * item.quantity).toFixed(2)}</td>\r\n                    <td>\r\n                      <button onClick={() => this.handleDecreaseQuantity(item.id)}>-</button>\r\n                      {item.quantity}\r\n                      <button onClick={() => this.handleIncreaseQuantity(item.id)}>+</button>\r\n                    </td>\r\n                    <td><button onClick={() => this.handleDelete(index)}>X</button></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"total-price\">\r\n              Total Price: €{totalPrice.toFixed(2)}\r\n            </div>\r\n            <button onClick={this.handlePayWithPayPal}>Pay with PayPal</button>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasketPage;"]},"metadata":{},"sourceType":"module"}